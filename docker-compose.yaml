services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      TZ: America/Argentina/Buenos_Aires
      MYSQL_ROOT_PASSWORD: cobre
      MYSQL_DATABASE: accounts
      MYSQL_USER: cobre
      MYSQL_PASSWORD: cobre
    ports:
      - "3306:3306"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cobre-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - cobre-net

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 24
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cobre-net

  redis:
    image: redis:7
    container_name: redis
    restart: always
    environment:
      TZ: America/Argentina/Buenos_Aires
    ports:
      - "6379:6379"
    command: ["redis-server", "--loglevel", "verbose"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cobre-net

  movements-service:
    build:
      context: ./ms-movements
      dockerfile: Dockerfile
    container_name: movements-service
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      LOGGING_LEVEL_ROOT: DEBUG
      JAVA_TOOL_OPTIONS: "-Djava.security.egd=file:/dev/./urandom -Xmx512m"
    ports:
      - "8091:8091"
    networks:
      - cobre-net
    restart: on-failure
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  accounts-service:
    build:
      context: ./ms-accounts
      dockerfile: Dockerfile
    container_name: accounts-service
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      LOGGING_LEVEL_ROOT: DEBUG
      JAVA_TOOL_OPTIONS: "-Djava.security.egd=file:/dev/./urandom -Xmx512m"
    ports:
      - "8082:8082"
    networks:
      - cobre-net
    restart: on-failure
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  cobre-net:
    driver: bridge
    name: cobre-net

volumes:
  mysql_data:
